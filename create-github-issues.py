#!/usr/bin/env python3
"""
Script para crear issues en GitHub autom√°ticamente
Requiere: pip install requests
"""

import requests
import json
import os
import sys
from typing import List, Dict

# Configuraci√≥n
GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
REPO_OWNER = 'MarxMad'
REPO_NAME = 'Cod3.0'
GITHUB_API_URL = 'https://api.github.com'

def create_issue(title: str, body: str, labels: List[str], assignees: List[str] = None) -> Dict:
    """Crear un issue en GitHub"""
    
    if not GITHUB_TOKEN:
        print("‚ùå Error: Necesitas configurar GITHUB_TOKEN")
        print("   export GITHUB_TOKEN=tu_token_aqui")
        return None
    
    url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/issues"
    
    headers = {
        'Authorization': f'token {GITHUB_TOKEN}',
        'Accept': 'application/vnd.github.v3+json',
        'Content-Type': 'application/json'
    }
    
    data = {
        'title': title,
        'body': body,
        'labels': labels
    }
    
    if assignees:
        data['assignees'] = assignees
    
    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()
        
        issue_data = response.json()
        print(f"‚úÖ Issue creado: #{issue_data['number']} - {title}")
        return issue_data
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error creando issue '{title}': {e}")
        return None

def main():
    """Funci√≥n principal para crear todos los issues"""
    
    print("üöÄ Creando issues en GitHub...")
    print(f"üìÅ Repositorio: {REPO_OWNER}/{REPO_NAME}")
    print()
    
    # Lista de issues a crear
    issues = [
        {
            "title": "Actualizar tarjetas de miembros en la landing page",
            "body": """Las tarjetas de miembros en la landing page necesitan ser actualizadas para mostrar informaci√≥n m√°s relevante y mejorar la presentaci√≥n visual.

**Problemas identificados:**
- Las tarjetas de organizadores est√°n hardcodeadas en el c√≥digo
- Falta informaci√≥n din√°mica de miembros del hackathon
- Dise√±o de tarjetas no es responsive en m√≥viles
- No hay integraci√≥n con datos reales de la base de datos

**Tareas:**
- [ ] Crear componente din√°mico para tarjetas de miembros
- [ ] Integrar con API para obtener datos reales de participantes
- [ ] Mejorar dise√±o responsive de las tarjetas
- [ ] A√±adir animaciones y efectos hover
- [ ] Implementar filtros por categor√≠as (organizadores, sponsors, etc.)""",
            "labels": ["bug", "ui/ux", "high-priority"]
        },
        {
            "title": "Mejorar validaci√≥n de autenticaci√≥n en dashboard",
            "body": """El sistema de validaci√≥n en las p√°ginas del dashboard tiene vulnerabilidades y no previene el acceso no autorizado correctamente.

**Problemas identificados:**
- Validaci√≥n inconsistente entre p√°ginas del dashboard
- No hay middleware de autenticaci√≥n centralizado
- Los usuarios pueden acceder a p√°ginas sin estar registrados
- Falta validaci√≥n de sesi√≥n en tiempo real
- No hay manejo de tokens expirados

**Tareas:**
- [ ] Crear middleware de autenticaci√≥n centralizado
- [ ] Implementar validaci√≥n de sesi√≥n en tiempo real
- [ ] A√±adir redirecci√≥n autom√°tica para usuarios no autenticados
- [ ] Implementar refresh de tokens
- [ ] A√±adir logging de intentos de acceso no autorizados
- [ ] Crear componente de protecci√≥n de rutas""",
            "labels": ["security", "high-priority", "bug"]
        },
        {
            "title": "Arreglar sistema de equipos e invitaciones",
            "body": """El sistema de equipos y invitaciones tiene problemas de funcionalidad que impiden el flujo correcto de trabajo en equipo.

**Problemas identificados:**
- Las invitaciones por email no se env√≠an correctamente
- Falta validaci√≥n de l√≠mites de miembros por equipo
- No hay notificaciones en tiempo real de invitaciones
- El sistema de aceptaci√≥n/rechazo de invitaciones es confuso
- Falta manejo de errores en el flujo de invitaciones

**Tareas:**
- [ ] Arreglar env√≠o de emails de invitaci√≥n
- [ ] Implementar validaci√≥n de l√≠mites de miembros
- [ ] A√±adir notificaciones en tiempo real
- [ ] Mejorar UI del flujo de invitaciones
- [ ] Implementar manejo robusto de errores
- [ ] A√±adir logs de actividad de equipos""",
            "labels": ["bug", "feature", "high-priority"]
        },
        {
            "title": "Corregir problemas de navbar y botones",
            "body": """El navbar tiene problemas de dise√±o que afectan la experiencia del usuario, especialmente en dispositivos m√≥viles.

**Problemas identificados:**
- Letra muy grande en el navbar que causa problemas de layout
- Botones se enciman en pantallas peque√±as
- Falta responsive design adecuado
- Navegaci√≥n no es intuitiva en m√≥viles
- Falta indicadores visuales de p√°gina activa

**Tareas:**
- [ ] Reducir tama√±o de fuente en navbar
- [ ] Implementar dise√±o responsive adecuado
- [ ] Arreglar superposici√≥n de botones
- [ ] A√±adir indicadores de p√°gina activa
- [ ] Mejorar navegaci√≥n m√≥vil
- [ ] Optimizar espaciado y padding""",
            "labels": ["ui/ux", "bug", "high-priority"]
        },
        {
            "title": "Sistema completo de gesti√≥n de proyectos",
            "body": """Implementar un sistema completo de gesti√≥n de proyectos que permita a los equipos gestionar todo el ciclo de vida de sus proyectos desde la plataforma.

**Tareas:**
- [ ] Crear dashboard de proyecto con m√©tricas en tiempo real
- [ ] Implementar sistema de milestones y deadlines
- [ ] A√±adir gesti√≥n de tareas y asignaciones
- [ ] Crear sistema de documentaci√≥n de proyecto
- [ ] Implementar timeline visual del proyecto
- [ ] A√±adir sistema de versionado de c√≥digo
- [ ] Crear integraci√≥n con GitHub/GitLab
- [ ] Implementar sistema de comentarios y feedback
- [ ] A√±adir m√©tricas de progreso del equipo
- [ ] Crear sistema de notificaciones de deadlines""",
            "labels": ["feature", "high-priority", "enhancement"]
        },
        {
            "title": "Sistema de verificaci√≥n de emails para env√≠o de proyectos",
            "body": """Implementar un sistema robusto de verificaci√≥n de emails para el env√≠o de proyectos, asegurando que solo equipos verificados puedan enviar sus proyectos.

**Tareas:**
- [ ] Implementar verificaci√≥n de email obligatoria para env√≠o
- [ ] Crear sistema de c√≥digos de verificaci√≥n por email
- [ ] A√±adir validaci√≥n de dominio de email (universidad/empresa)
- [ ] Implementar sistema de verificaci√≥n en dos pasos
- [ ] Crear logs de verificaci√≥n de emails
- [ ] A√±adir sistema de reenv√≠o de c√≥digos
- [ ] Implementar expiraci√≥n de c√≥digos de verificaci√≥n
- [ ] Crear dashboard de verificaci√≥n para admins
- [ ] A√±adir notificaciones de verificaci√≥n exitosa
- [ ] Implementar sistema de verificaci√≥n masiva""",
            "labels": ["security", "feature", "high-priority"]
        },
        {
            "title": "Sistema de entrega y evaluaci√≥n de proyectos",
            "body": """Crear un sistema completo para la entrega y evaluaci√≥n de proyectos que incluya validaciones, scoring y feedback.

**Tareas:**
- [ ] Implementar formulario de entrega de proyecto
- [ ] Crear sistema de validaci√≥n de archivos (tama√±o, tipo, etc.)
- [ ] A√±adir sistema de scoring autom√°tico
- [ ] Implementar panel de evaluaci√≥n para jueces
- [ ] Crear sistema de feedback y comentarios
- [ ] A√±adir sistema de calificaci√≥n por criterios
- [ ] Implementar ranking autom√°tico de proyectos
- [ ] Crear sistema de notificaciones de resultados
- [ ] A√±adir exportaci√≥n de resultados
- [ ] Implementar sistema de apelaciones""",
            "labels": ["feature", "high-priority", "enhancement"]
        },
        {
            "title": "Mejorar seguridad del panel de administraci√≥n con wallets",
            "body": """Implementar un sistema robusto de autenticaci√≥n y autorizaci√≥n basado en wallets para el panel de administraci√≥n, asegurando que solo wallets autorizadas puedan acceder.

**Tareas:**
- [ ] Implementar middleware de autenticaci√≥n robusto
- [ ] Crear sistema de roles y permisos granular
- [ ] Implementar sistema de sesiones seguras
- [ ] Crear sistema de whitelist de wallets
- [ ] Implementar sistema de auditor√≠a completo
- [ ] Crear dashboard de seguridad
- [ ] Implementar sistema de gesti√≥n de acceso
- [ ] Crear sistema de backup de seguridad
- [ ] Implementar sistema de monitoreo
- [ ] Crear sistema de reportes
- [ ] Implementar sistema de emergencia
- [ ] A√±adir validaciones de seguridad avanzadas""",
            "labels": ["security", "high-priority", "enhancement"]
        }
    ]
    
    # Crear issues
    created_issues = []
    for i, issue in enumerate(issues, 1):
        print(f"üìù Creando issue {i}/{len(issues)}: {issue['title']}")
        
        result = create_issue(
            title=issue['title'],
            body=issue['body'],
            labels=issue['labels'],
            assignees=['MarxMad']
        )
        
        if result:
            created_issues.append(result)
        
        print()  # L√≠nea en blanco para separar
    
    print(f"üéâ ¬°Completado! Se crearon {len(created_issues)} issues de {len(issues)}")
    
    if created_issues:
        print("\nüìã Issues creados:")
        for issue in created_issues:
            print(f"  - #{issue['number']}: {issue['title']}")
            print(f"    üîó {issue['html_url']}")

if __name__ == "__main__":
    main()
